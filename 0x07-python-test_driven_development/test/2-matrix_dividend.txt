Try importing function from module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Set Matrix:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> floatmatrix = [[1, 2, 3.0], [4, 5.0, 6]]

Try normal matrix with int div
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Try float matrix with int div
	>>> matrix_divided(floatmatrix, 1)
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Try None div:
	>>> matrix_divided(matrix, None)
	Traceback (most recent call last):
	TypeError: div must be a number

Try diff sizes:
	>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Try Zero div:
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

try overflow float:
    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Try missing one argument:
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Try missing two arguments:
    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Try matrix is a list:
	>>> matrix_divided("hi mom", 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
